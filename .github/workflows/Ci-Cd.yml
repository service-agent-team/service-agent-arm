name: Deployment Ci-Cd... 🌙

on:
  push:
    branches:
      - 'main'
      - 'dev'

jobs:
  lint:
    name: Linting my code ⚡️
    runs-on: ubuntu-latest
    steps:
      - name: checkout code... 🪐
        uses: actions/checkout@v3

      - name: Cache dependencies 🌈
        id: cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}

      - name: Install dependencies ☀️
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm install

      - name: Linting ❄️
        run: npm run lint

  build:
    needs: lint
    name: Building data to deploy 🌞
    runs-on: ubuntu-latest
    steps:
      - name: checkout my code ... 🌻
        uses: actions/checkout@v3

      - name: Cache dependencies ☁️
        id: cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}

      - name: Install Dependencies 🌨️
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm install

      - name: Build the code ... 🌩️
        run: npm run build

      - name: Zip artifacts 📦
        run: zip -r dist-files.zip build

      - name: Upload artifacts ... 🫀
        uses: actions/upload-artifact@v3
        with:
          name: dist-files
          path: dist-files.zip

  deploy:
    needs: build
    name: Deployment ... 🚀
    runs-on: ubuntu-latest
    steps:
      - name: checkout my code 🪐
        uses: actions/checkout@v3

      - name: Cache dependencies 🧪
        id: cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}

      - name: Install Dependencies 🌨️
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm install

      - name: Download artifacts... dist... 💋
        uses: actions/download-artifact@v3
        with:
          name: dist-files
          path: ./

      - name: Output Contents... 💥
        run: ls ./

      - name: Unzip artifacts 📂
        run: unzip dist-files.zip -d ./build

      - name: Connect to server 🆘
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_PRIVATE_KEY }}
          script: |
            sudo rm -rf /var/www/html/*
            sudo cp -r ./build/* /var/www/html/
            echo "Deployed... 🥹😂🥹"
