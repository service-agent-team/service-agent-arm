name: Deployment Ci-Cd... 🌙
on:
  push:
    branches:
      - 'main'
      - 'dev'
jobs:
  lint:
    name: Linting my code ⚡️
    runs-on: ubuntu-latest
    steps:
      - name: chackout code... 🪐
        uses: actions/checkout@v3

      - name: Cashe dependencies 🌈
        id: cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}

      - name: Install dependencies ☀️
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm install

      - name: Linting ❄️
        run: npm run lint
  build:
    needs: lint
    name: Building data to deploy 🌞
    runs-on: ubuntu-latest
    steps:
      - name: checkout my code ... 🌻
        uses: actions/checkout@v3

      - name: Cashe dependencies ☁️
        id: cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}

      - name: Install Dependencies 🌨️
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm install

      - name: Build the code ... 🌩️
        run: npm run build

      - name: Upload arrifacts ... 🫀
        uses: actions/upload-artifact@v3
        with:
          name: dist-files
          path: build

  deploy:
    needs: build
    name: Deployment ... 🚀
    runs-on: ubuntu-latest
    steps:
      - name: chechout my code 🪐
        uses: actions/checkout@v3

      - name: Cashe dependencies 🧪
        id: cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}

      - name: Install Dependencies 🌨️
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm install

      - name: Donwload artifacts.. dist.. 💋
        uses: actions/download-artifact@v3
        with:
          name: dist-files
          path: ./build

      - name: Output Contents.. 💥
        run: ls

      - name: Connect to server 🆘
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{secrets.SERVER_USERNAME}}
          key: ${{secrets.SERVER_PRIVATE_KEY}}
          script: |
            cd /var/www/html/service-agent-arm
            sudo git pull
            sudo npm run build
            echo "Deployed... 🥹😂🥹"
